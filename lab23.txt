#views.py


from .forms import StudentForm, CourseForm
from .models import Student, Course
from django.shortcuts import render, redirect, get_object_or_404
def add_student(request): 
    if request.method == 'POST':
        form = StudentForm(request.POST) 
        if form.is_valid(): 
            form.save() 
    # Redirect to a view that lists all students 
            return redirect('student_list')
    else:
        form = StudentForm()
    return render(request, 'course_registration/add_student.html', {'form': form})

def add_course(request): 
    if request.method == 'POST':
        form = CourseForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('course_registration')
    else:
        form = CourseForm()
    return render(request, 'course_registration/add_course.html', {'form': form})

def register_student(request): 
    if request.method == 'POST': 
        student_name = request.POST.get('student_name') 
        course_id = request.POST.get('course_id') 
# Validate that both student_name and course_id are provided
        if not student_name or not course_id: 
            return render(request, 'course_registration/register_student.html',{'courses': Course.objects.all(),'error_message': 'Please provide both student name and select a course.'})
        try: 
        # Retrieve the course based on course_id or return 404 if not found 
            course = get_object_or_404(Course, pk=course_id)
        # Check if the student already exists in the database 
            student = Student.objects.filter(name=student_name).first() 
            if not student: 
# If the student does not exist, return an error message 
                return render(request, 'course_registration/register_student.html', {'courses': Course.objects.all(), 'error_message': 'Student does not exist in the database.'}) 
# Add the student to the course 
            course.students.add(student) 
            return redirect('course_registration') 
        except Course.DoesNotExist: 
            return render(request, 'course_registration/register_student.html', {'courses': Course.objects.all(), 'error_message': 'Invalid course ID. Please select a valid course.'}) 
# If not a POST request, render the registration form with all courses 
    return render(request, 'course_registration/register_student.html', {'courses': Course.objects.all()}) 
def course_registration(request): 
    courses = Course.objects.all() 
    return render(request, 'course_registration/course_registration.html.html', {'courses': courses}) 

def students_list(request, course_id): 
# Retrieve the course based on course_id or return 404 if not found 
    course = get_object_or_404(Course, course_id=course_id) 
# Retrieve the students associated with the course 
    students = course.students.all() 
    return render(request, 'course_registration/students_list.html', {'course': course, 'students': students})


#course_registration/urls.py

from django.urls import path
from . import views
urlpatterns = [ 
path('add_student/', views.add_student, name='add_student'), 
path('add_course/', views.add_course, name='add_course'), 
path('register/', views.register_student, name='register_student'), 
path('courses/', views.course_registration, name='course_registration'), 
path('students_list/<int:course_id>/', views.students_list, 
name='students_list'), 
] 

#lab2/urls.py
from django.contrib import admin
from django.urls import path, include
urlpatterns = [ 
path("admin/", admin.site.urls), 
path('fruits_and_students/', include('fruits_and_students.urls')), 
path('', include('website_page.urls')), 
path('registration/', include('course_registration.urls')), 
]

#course_registration/models.py

from django.db import models
class Student(models.Model): 
    name = models.CharField(max_length=100,unique=True) 
    date_of_birth = models.DateField( default='1900-01-01', blank=False, null=False) # Set a default date 
    email = models.EmailField( default='example@example.com', blank=False, null=False) # Set a default email 
def __str__(self): 
    return self.name 
class Course(models.Model): 
    name = models.CharField(max_length=100,unique=True) 
    students = models.ManyToManyField(Student, related_name='courses') 
    course_id = models.IntegerField(default=0,unique=True) 
def __str__(self): 
    return self.name


#course_registration/forms.py
from .models import Student
from django import forms
from .models import Course
class CourseForm(forms.ModelForm): 
    class Meta: 
        model = Course
        fields = ['name', 'course_id'] 
class StudentForm(forms.ModelForm): 
    class Meta: 
        model = Student
        fields = ['name', 'date_of_birth', 'email'] 


#templates/course_registration/add_student.html

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Add Student</title>
</head>
<body>
<h1>Add Student</h1>
<form method="post">
{% csrf_token %} 
{{ form.as_p }} 
<button type="submit">Submit</button>
</form>
</body>
</html>


#templates/course_registration/add_course.html
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Course</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
            margin: 0;
            padding: 20px;
        }

        h1 {
            color: #333;
        }

        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
        }

        input[type="text"],
        input[type="number"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
            font-size: 16px;
        }

        button[type="submit"] {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        button[type="submit"]:hover {
            background-color: #0056b3;
        }
    </style>
</head>

<body>
    <h1>Add Course</h1>
    <form method="POST">
        {% csrf_token %}
        <label for="course_name">Course Name:</label>
        <input type="text" id="course_name" name="name" required>
        <label for="course_id">Course ID:</label>
        <input type="number" id="course_id" name="course_id" required>
        <button type="submit">Add Course</button>
    </form>
</body>

</html>

#templates/course_registration/register_student.html
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register Student</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 600px;
            margin: 50px auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .btn {
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .btn-primary {
            background-color: #007bff;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Register Student to Course</h1>
        <form method="POST" class="form">
            {% csrf_token %}
            <div class="form-group">
                <label for="student_name">Student Name:</label>
                <input type="text" id="student_name" name="student_name" class="form-control" required>
            </div>
            <div class="form-group">
                <label for="course_id">Select Course:</label>
                <select name="course_id" id="course_id" class="form-control">
                    {% for course in courses %}
                    <option value="{{ course.id }}">{{ course.name
                        }}</option>
                    {% endfor %}
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
</body>

</html>

#templates/course_registration/course_registration.html

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 600px;
            margin: 50px auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .list-group {
            list-style-type: none;
            padding: 0;
        }

        .list-group-item {
            margin-bottom: 10px;
        }

        .list-group-item a {
            text-decoration: none;
            color: #333;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Course Registration</h1>
        <ul class="list-group">
            {% for course in courses %}
            <li class="list-group-item">
                <a href="{% url 'students_list' course.course_id %}">{{
                    course.name }} (ID: {{course.course_id }})</a>
            </li>
            {% endfor %}
        </ul>
    </div>
</body>
    </html>


#templates/course_registration/students_list.html

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Students List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 600px;
            margin: 50px auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .list-group {
            list-style-type: none;
            padding: 0;
        }

        .list-group-item {
            margin-bottom: 10px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Students Registered for {{course.name}}</h1>
        <ul class="list-group">
            {% for student in students %}
            <li class="list-group-item">{{student.name}}</li>
            {% empty %}
            <li class="list-group-item">No students registered for this
                course.</li>
            {% endfor %}
        </ul>
    </div>
</body>

</html>
